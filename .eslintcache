[{"/home/marcos/projects/covid19/covid19/src/index.js":"1","/home/marcos/projects/covid19/covid19/src/App.js":"2","/home/marcos/projects/covid19/covid19/src/commons/styles/global-style.js":"3","/home/marcos/projects/covid19/covid19/src/container/Main/index.jsx":"4","/home/marcos/projects/covid19/covid19/src/api.js":"5","/home/marcos/projects/covid19/covid19/src/container/Main/style.js":"6","/home/marcos/projects/covid19/covid19/src/container/Main/components/Board.jsx":"7","/home/marcos/projects/covid19/covid19/src/container/Main/components/Card.jsx":"8","/home/marcos/projects/covid19/covid19/src/components/index.js":"9","/home/marcos/projects/covid19/covid19/src/container/Main/components/style.js":"10","/home/marcos/projects/covid19/covid19/src/components/Button.jsx":"11","/home/marcos/projects/covid19/covid19/src/components/Card.jsx":"12","/home/marcos/projects/covid19/covid19/src/components/Typography.jsx":"13","/home/marcos/projects/covid19/covid19/src/components/Select.jsx":"14","/home/marcos/projects/covid19/covid19/src/components/Grid.jsx":"15","/home/marcos/projects/covid19/covid19/src/components/Skeleton.jsx":"16","/home/marcos/projects/covid19/covid19/src/components/MenuItem.jsx":"17","/home/marcos/projects/covid19/covid19/src/container/Main/components/Panel.jsx":"18","/home/marcos/projects/covid19/covid19/src/commons/constants/countries.js":"19","/home/marcos/projects/covid19/covid19/src/serviceWorker.js":"20"},{"size":478,"mtime":1610661317820,"results":"21","hashOfConfig":"22"},{"size":397,"mtime":1610574761890,"results":"23","hashOfConfig":"22"},{"size":742,"mtime":1610574437140,"results":"24","hashOfConfig":"22"},{"size":1144,"mtime":1610582333040,"results":"25","hashOfConfig":"22"},{"size":290,"mtime":1610664487750,"results":"26","hashOfConfig":"22"},{"size":140,"mtime":1610576205800,"results":"27","hashOfConfig":"22"},{"size":1050,"mtime":1610664600410,"results":"28","hashOfConfig":"22"},{"size":424,"mtime":1610664616620,"results":"29","hashOfConfig":"22"},{"size":334,"mtime":1610576883650,"results":"30","hashOfConfig":"22"},{"size":644,"mtime":1610581100670,"results":"31","hashOfConfig":"22"},{"size":68,"mtime":1610576534410,"results":"32","hashOfConfig":"22"},{"size":131,"mtime":1610576576920,"results":"33","hashOfConfig":"22"},{"size":80,"mtime":1610576843020,"results":"34","hashOfConfig":"22"},{"size":68,"mtime":1610576720360,"results":"35","hashOfConfig":"22"},{"size":62,"mtime":1610576660940,"results":"36","hashOfConfig":"22"},{"size":73,"mtime":1610576749660,"results":"37","hashOfConfig":"22"},{"size":74,"mtime":1610576683450,"results":"38","hashOfConfig":"22"},{"size":2118,"mtime":1610665053980,"results":"39","hashOfConfig":"22"},{"size":681,"mtime":1610581887140,"results":"40","hashOfConfig":"22"},{"size":5341,"mtime":1610661394880,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"bx9451",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/marcos/projects/covid19/covid19/src/index.js",[],["86","87"],"/home/marcos/projects/covid19/covid19/src/App.js",[],"/home/marcos/projects/covid19/covid19/src/commons/styles/global-style.js",[],"/home/marcos/projects/covid19/covid19/src/container/Main/index.jsx",[],"/home/marcos/projects/covid19/covid19/src/api.js",["88"],"const path = 'https://coronavirus-19-api.herokuapp.com/countries'\n\nconst headers = {\n  method: 'get',\n  mode: 'cors',\n  cache: 'default'\n}\n\nfunction getCountry(country) {\n  return fetch(`${path}/${country}`, headers)\n    .then((response) => response.json())\n}\n\nexport default { getCountry }","/home/marcos/projects/covid19/covid19/src/container/Main/style.js",[],"/home/marcos/projects/covid19/covid19/src/container/Main/components/Board.jsx",[],"/home/marcos/projects/covid19/covid19/src/container/Main/components/Card.jsx",[],"/home/marcos/projects/covid19/covid19/src/components/index.js",[],"/home/marcos/projects/covid19/covid19/src/container/Main/components/style.js",[],"/home/marcos/projects/covid19/covid19/src/components/Button.jsx",[],"/home/marcos/projects/covid19/covid19/src/components/Card.jsx",[],["89","90"],"/home/marcos/projects/covid19/covid19/src/components/Typography.jsx",[],"/home/marcos/projects/covid19/covid19/src/components/Select.jsx",[],"/home/marcos/projects/covid19/covid19/src/components/Grid.jsx",[],"/home/marcos/projects/covid19/covid19/src/components/Skeleton.jsx",[],"/home/marcos/projects/covid19/covid19/src/components/MenuItem.jsx",[],"/home/marcos/projects/covid19/covid19/src/container/Main/components/Panel.jsx",["91"],"import React, { memo } from 'react'\nimport RefreshIcon from '../../../assets/images/refresh.svg'\nimport { Card, Typography, Button, Select, MenuItem } from '../../../components'\nimport COUNTRIES from '../../../commons/constants/countries'\nimport { CardPanelContentStyled, ItemStyled } from './style'\n\nconst navigatorHasShare = navigator.share\n\nfunction Panel({ updateAt, onChange, data, country, getCoviddata }) {\n  const { cases, recovered, deaths } = data\n\n  const renderCountries = (country, index) => (\n    <MenuItem key={`country-${index}`} value={country.value}>\n      <ItemStyled>\n        <div>{country.label}</div>\n        <img src={country.flag} alt={`País-${country.label}`} />\n      </ItemStyled>\n    </MenuItem>\n  )\n\n  const textCovid19 = `País: ${country} - casos: ${cases} - recuperados: ${recovered} - mortes: ${deaths}`\n\n  const copyInfo = () => {\n    navigator.clipboard.writeText(textCovid19)\n  }\n\n  const shareInfo = () => {\n    navigator.share({\n      title: `Dados do Covid19 - ${country}`,\n      text: textCovid19,\n      url: 'https://covid19dio.netlify.app/'\n    })\n  }\n\n  const renderShareButton = (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={shareInfo}>\n        Compartilhar\n      </Button>\n    </div>\n  )\n\n  const renderCopyButton = (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={copyInfo}>\n        Copiar\n      </Button>\n    </div>\n  )\n\n  return (\n    <Card>\n      <CardPanelContentStyled>\n        <div>\n          <Typography variant=\"h5\" component=\"span\" color=\"primary\">COVID19</Typography>\n          <Typography variant=\"h6\" component=\"span\" color=\"primary\">Painel Coronavírus</Typography>\n          <Typography variant=\"body2\" component=\"span\" color=\"primary\">Atualizado em: {updateAt}</Typography>\n          <div className=\"pt-2\">\n            <Select onChange={onChange} value={country}>\n              {COUNTRIES.map(renderCountries)}\n            </Select>\n          </div>\n        </div>\n        {navigatorHasShare ? renderShareButton : renderCopyButton}\n      </CardPanelContentStyled>\n    </Card>\n  )\n}\n\nexport default memo(Panel)","/home/marcos/projects/covid19/covid19/src/commons/constants/countries.js",[],"/home/marcos/projects/covid19/covid19/src/serviceWorker.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":14,"column":1,"nodeType":"98","endLine":14,"endColumn":30},{"ruleId":"92","replacedBy":"99"},{"ruleId":"94","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":19},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["105"],["106"],"no-unused-vars","'RefreshIcon' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]